/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import datetime.CurrentDateAndTime;
import db_connect.JavaDBConnect;
import java.awt.Desktop;
import com.itextpdf.text.Document;
 
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.KeyListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
 
import static java.lang.Thread.sleep;
import java.net.URI; 
import snap.Snap; 

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.Barcode;
import com.itextpdf.text.pdf.BarcodeEAN;
import com.itextpdf.text.pdf.PdfContentByte;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
import javax.activation.DataSource;
import javax.activation.FileDataSource;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import javax.imageio.ImageIO;
import javax.mail.Message;
import javax.mail.Multipart;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;
import javax.swing.JFileChooser; 

/**
 *
 * @author Milos Dragovic
 */
public class AlphaStatMain extends javax.swing.JFrame {

    private Connection connection = null;
    private PreparedStatement pst = null;
    private ResultSet rs = null;
   
    
    public AlphaStatMain() {
        initComponents();
        init();
        connection = JavaDBConnect.dbConnect();
        updateStudentInfoTable();
        updateStudentShowInfo();
        updateDoc();
        setListeners();
        currentTime();
        
//        setSearchListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jToolBar1 = new javax.swing.JToolBar();
        btnSingOut = new javax.swing.JButton();
        btnOffHelp = new javax.swing.JButton();
        panelCont = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelDataTable = new javax.swing.JPanel();
        jScrollPaneStudentInfo = new javax.swing.JScrollPane();
        tblStudentInfo = new javax.swing.JTable();
        panelReport = new javax.swing.JPanel();
        jScrollPaneComment = new javax.swing.JScrollPane();
        tAreaComment = new javax.swing.JTextArea();
        lblComment = new javax.swing.JLabel();
        lblHealthStatus = new javax.swing.JLabel();
        rbtnHealthStatus1 = new javax.swing.JRadioButton();
        rbtnHealthStatus2 = new javax.swing.JRadioButton();
        buttonReport = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        lblAttachment = new javax.swing.JLabel();
        panelIndicator = new javax.swing.JPanel();
        lblIndicatorAge = new javax.swing.JLabel();
        sliderAge = new javax.swing.JSlider();
        lblIndicatorHeight = new javax.swing.JLabel();
        sliderWeight = new javax.swing.JSlider();
        lblIndicatorWeight = new javax.swing.JLabel();
        sliderHeight = new javax.swing.JSlider();
        panelStatistics = new javax.swing.JPanel();
        panelEmail = new javax.swing.JPanel();
        mainPanel = new javax.swing.JPanel();
        lblFrom = new javax.swing.JLabel();
        txtFrom = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        lblTo = new javax.swing.JLabel();
        txtTo = new javax.swing.JTextField();
        lblSubject = new javax.swing.JLabel();
        txtSubject = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaMessage = new javax.swing.JTextArea();
        txtAttachFile = new javax.swing.JTextField();
        txtAttachName = new javax.swing.JTextField();
        btnAttach = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSendMail = new javax.swing.JButton();
        txtPassword = new javax.swing.JPasswordField();
        panelDocument = new javax.swing.JPanel();
        documentPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoc = new javax.swing.JTable();
        txtDocAttach = new javax.swing.JTextField();
        btnDocAttach = new javax.swing.JButton();
        txtDocID = new javax.swing.JTextField();
        txtDocName = new javax.swing.JTextField();
        txtDocSId = new javax.swing.JTextField();
        btnDocDelete = new javax.swing.JButton();
        btnDocAdd = new javax.swing.JButton();
        btnDocClear = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jPanelWelcome = new javax.swing.JPanel();
        lblWelcome = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jPanelCommands = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        panelStudentInfo = new javax.swing.JPanel();
        lblStudentId = new javax.swing.JLabel();
        txtStudentId = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        lblFirstName = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        lblLastName = new javax.swing.JLabel();
        txtDepartment = new javax.swing.JTextField();
        lblDepartment = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        txtHeight = new javax.swing.JTextField();
        lblHeight = new javax.swing.JLabel();
        lblWeight = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        txtWeight = new javax.swing.JTextField();
        lblBlood = new javax.swing.JLabel();
        txtBlood = new javax.swing.JTextField();
        comboGender = new javax.swing.JComboBox<>();
        panelTableStudentShowInfo = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblStudentShowInfo = new javax.swing.JTable();
        panelPhoto = new javax.swing.JPanel();
        paneImgPlace = new javax.swing.JPanel();
        lblImage = new javax.swing.JLabel();
        btnImageUpload = new javax.swing.JButton();
        txtImageUpload = new javax.swing.JTextField();
        btnSaveImg = new javax.swing.JButton();
        menuBarMain = new javax.swing.JMenuBar();
        mnuIteamFile = new javax.swing.JMenu();
        mIteamClose = new javax.swing.JMenuItem();
        mIteamExit = new javax.swing.JMenuItem();
        mnuIteamEdit = new javax.swing.JMenu();
        mIteamSnap = new javax.swing.JMenuItem();
        mnuIteamHelp = new javax.swing.JMenu();
        mIteamOffHelp = new javax.swing.JMenuItem();
        mItemWebHelp = new javax.swing.JMenuItem();
        mnuIteamAbout = new javax.swing.JMenu();
        mIteamAboutMe = new javax.swing.JMenuItem();
        mnuIteamDate = new javax.swing.JMenu();
        mnuLoggedTime = new javax.swing.JMenu();
        mnuRealTime = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnSingOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.png"))); // NOI18N
        btnSingOut.setText(" Sing out ");
        btnSingOut.setFocusable(false);
        btnSingOut.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSingOut.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSingOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSingOutActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSingOut);

        btnOffHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/offlinehelp.png"))); // NOI18N
        btnOffHelp.setText(" Help ");
        btnOffHelp.setFocusable(false);
        btnOffHelp.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnOffHelp.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnOffHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOffHelpActionPerformed(evt);
            }
        });
        jToolBar1.add(btnOffHelp);

        panelCont.setBackground(new java.awt.Color(102, 102, 255));
        panelCont.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Action panel", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 16), new java.awt.Color(0, 51, 153))); // NOI18N

        jTabbedPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        tblStudentInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblStudentInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblStudentInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblStudentInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentInfoMouseClicked(evt);
            }
        });
        jScrollPaneStudentInfo.setViewportView(tblStudentInfo);

        panelReport.setBackground(new java.awt.Color(204, 204, 255));
        panelReport.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Report", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 14), new java.awt.Color(0, 0, 102))); // NOI18N

        tAreaComment.setColumns(20);
        tAreaComment.setRows(5);
        tAreaComment.setToolTipText("");
        jScrollPaneComment.setViewportView(tAreaComment);

        lblComment.setFont(new java.awt.Font("Agency FB", 0, 14)); // NOI18N
        lblComment.setForeground(new java.awt.Color(0, 0, 102));
        lblComment.setText("Comment");

        lblHealthStatus.setFont(new java.awt.Font("Agency FB", 0, 14)); // NOI18N
        lblHealthStatus.setForeground(new java.awt.Color(0, 0, 102));
        lblHealthStatus.setText("Health Status");

        buttonGroup1.add(rbtnHealthStatus1);
        rbtnHealthStatus1.setFont(new java.awt.Font("Adobe Hebrew", 1, 14)); // NOI18N
        rbtnHealthStatus1.setForeground(new java.awt.Color(0, 153, 51));
        rbtnHealthStatus1.setText("Good");
        rbtnHealthStatus1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnHealthStatus1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbtnHealthStatus2);
        rbtnHealthStatus2.setFont(new java.awt.Font("Adobe Hebrew", 1, 14)); // NOI18N
        rbtnHealthStatus2.setForeground(new java.awt.Color(204, 0, 0));
        rbtnHealthStatus2.setText("Not Good");
        rbtnHealthStatus2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtnHealthStatus2ActionPerformed(evt);
            }
        });

        buttonReport.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buttonReport.setForeground(new java.awt.Color(0, 0, 102));
        buttonReport.setText("Generate Report");
        buttonReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReportActionPerformed(evt);
            }
        });

        buttonGroup2.add(jCheckBox1);
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(0, 0, 102));
        jCheckBox1.setText("Include Chart");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        buttonGroup2.add(jCheckBox2);
        jCheckBox2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(0, 0, 102));
        jCheckBox2.setText("No Chart");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        lblAttachment.setFont(new java.awt.Font("Agency FB", 0, 14)); // NOI18N
        lblAttachment.setForeground(new java.awt.Color(0, 0, 102));
        lblAttachment.setText("Attachment");

        javax.swing.GroupLayout panelReportLayout = new javax.swing.GroupLayout(panelReport);
        panelReport.setLayout(panelReportLayout);
        panelReportLayout.setHorizontalGroup(
            panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReportLayout.createSequentialGroup()
                .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelReportLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblAttachment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblHealthStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelReportLayout.createSequentialGroup()
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(panelReportLayout.createSequentialGroup()
                                .addComponent(rbtnHealthStatus1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(rbtnHealthStatus2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblComment))))
                    .addGroup(panelReportLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonReport, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(128, 128, 128)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPaneComment, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelReportLayout.setVerticalGroup(
            panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelReportLayout.createSequentialGroup()
                .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPaneComment, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                    .addGroup(panelReportLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblComment)
                            .addComponent(lblHealthStatus)
                            .addComponent(rbtnHealthStatus1)
                            .addComponent(rbtnHealthStatus2))
                        .addGap(5, 5, 5)
                        .addGroup(panelReportLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2)
                            .addComponent(lblAttachment))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonReport)))
                .addGap(0, 39, Short.MAX_VALUE))
        );

        panelIndicator.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Indicator", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 0, 16), new java.awt.Color(0, 0, 102))); // NOI18N
        panelIndicator.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        lblIndicatorAge.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIndicatorAge.setText("Age");

        sliderAge.setBackground(new java.awt.Color(153, 153, 255));
        sliderAge.setMajorTickSpacing(20);
        sliderAge.setMinorTickSpacing(5);
        sliderAge.setPaintLabels(true);
        sliderAge.setPaintTicks(true);
        sliderAge.setValue(0);

        lblIndicatorHeight.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIndicatorHeight.setText("Height");

        sliderWeight.setBackground(new java.awt.Color(153, 153, 255));
        sliderWeight.setMajorTickSpacing(20);
        sliderWeight.setMaximum(120);
        sliderWeight.setMinorTickSpacing(5);
        sliderWeight.setPaintLabels(true);
        sliderWeight.setPaintTicks(true);
        sliderWeight.setValue(0);

        lblIndicatorWeight.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lblIndicatorWeight.setText("Weight");

        sliderHeight.setBackground(new java.awt.Color(153, 153, 255));
        sliderHeight.setMajorTickSpacing(40);
        sliderHeight.setMaximum(220);
        sliderHeight.setMinorTickSpacing(10);
        sliderHeight.setPaintLabels(true);
        sliderHeight.setPaintTicks(true);
        sliderHeight.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        javax.swing.GroupLayout panelIndicatorLayout = new javax.swing.GroupLayout(panelIndicator);
        panelIndicator.setLayout(panelIndicatorLayout);
        panelIndicatorLayout.setHorizontalGroup(
            panelIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelIndicatorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblIndicatorAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblIndicatorHeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblIndicatorWeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addGroup(panelIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sliderAge, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                    .addComponent(sliderHeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sliderWeight, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        panelIndicatorLayout.setVerticalGroup(
            panelIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelIndicatorLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panelIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIndicatorAge, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIndicatorHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelIndicatorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliderWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIndicatorWeight, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelDataTableLayout = new javax.swing.GroupLayout(panelDataTable);
        panelDataTable.setLayout(panelDataTableLayout);
        panelDataTableLayout.setHorizontalGroup(
            panelDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDataTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPaneStudentInfo, javax.swing.GroupLayout.DEFAULT_SIZE, 785, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(panelIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        panelDataTableLayout.setVerticalGroup(
            panelDataTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDataTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPaneStudentInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(panelReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelDataTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelIndicator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jTabbedPane1.addTab(" Data table ", panelDataTable);

        javax.swing.GroupLayout panelStatisticsLayout = new javax.swing.GroupLayout(panelStatistics);
        panelStatistics.setLayout(panelStatisticsLayout);
        panelStatisticsLayout.setHorizontalGroup(
            panelStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1275, Short.MAX_VALUE)
        );
        panelStatisticsLayout.setVerticalGroup(
            panelStatisticsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 306, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab(" Statistics ", panelStatistics);

        panelEmail.setBackground(new java.awt.Color(204, 255, 204));
        panelEmail.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblFrom.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblFrom.setForeground(new java.awt.Color(255, 0, 0));
        lblFrom.setText(" From ");

        lblPassword.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(255, 0, 0));
        lblPassword.setText(" Password");

        lblTo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblTo.setForeground(new java.awt.Color(0, 51, 0));
        lblTo.setText("TO");

        lblSubject.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lblSubject.setForeground(new java.awt.Color(0, 51, 0));
        lblSubject.setText(" Subject ");

        txtAreaMessage.setColumns(20);
        txtAreaMessage.setRows(5);
        jScrollPane3.setViewportView(txtAreaMessage);

        btnAttach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/attach.png"))); // NOI18N
        btnAttach.setText(" Attach");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText(" Attachment Name ");

        btnSendMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/sendMail.png"))); // NOI18N
        btnSendMail.setText(" Send Mail ");

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFrom)
                            .addComponent(lblPassword)
                            .addComponent(lblTo, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(412, 412, 412)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSendMail, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAttachFile, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAttachName, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(btnAttach, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(mainPanelLayout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                .addContainerGap(11, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(lblFrom)
                        .addGap(21, 21, 21)
                        .addComponent(lblPassword)
                        .addGap(21, 21, 21)
                        .addComponent(lblTo)
                        .addGap(28, 28, 28)
                        .addComponent(lblSubject))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(txtFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(btnAttach, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(txtAttachFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(txtAttachName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSendMail)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelEmailLayout = new javax.swing.GroupLayout(panelEmail);
        panelEmail.setLayout(panelEmailLayout);
        panelEmailLayout.setHorizontalGroup(
            panelEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmailLayout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(201, Short.MAX_VALUE))
        );
        panelEmailLayout.setVerticalGroup(
            panelEmailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEmailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(" Email", panelEmail);

        documentPanel.setBackground(new java.awt.Color(125, 248, 154));
        documentPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblDoc.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDoc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jScrollPane4.setViewportView(tblDoc);

        documentPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, 493, 188));
        documentPanel.add(txtDocAttach, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 40, 300, 30));

        btnDocAttach.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/attach.png"))); // NOI18N
        btnDocAttach.setText(" Attach ");
        documentPanel.add(btnDocAttach, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 107, 32));
        documentPanel.add(txtDocID, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 159, 30));
        documentPanel.add(txtDocName, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 160, 159, 30));
        documentPanel.add(txtDocSId, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 159, 30));

        btnDocDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnDocDelete.setText(" Delete ");
        documentPanel.add(btnDocDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 107, -1));

        btnDocAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnDocAdd.setText(" Add ");
        documentPanel.add(btnDocAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 107, -1));

        btnDocClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear.png"))); // NOI18N
        btnDocClear.setText(" Clear ");
        documentPanel.add(btnDocClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 107, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));
        jLabel2.setText(" Doc id");
        documentPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 50, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("Student id");
        documentPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 82, 30));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));
        jLabel4.setText(" Document name");
        documentPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, -1, 30));

        javax.swing.GroupLayout panelDocumentLayout = new javax.swing.GroupLayout(panelDocument);
        panelDocument.setLayout(panelDocumentLayout);
        panelDocumentLayout.setHorizontalGroup(
            panelDocumentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDocumentLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(documentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        panelDocumentLayout.setVerticalGroup(
            panelDocumentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDocumentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(documentPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab(" Document", panelDocument);

        javax.swing.GroupLayout panelContLayout = new javax.swing.GroupLayout(panelCont);
        panelCont.setLayout(panelContLayout);
        panelContLayout.setHorizontalGroup(
            panelContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        panelContLayout.setVerticalGroup(
            panelContLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContLayout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanelWelcome.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblWelcome.setFont(new java.awt.Font("Agency FB", 1, 16)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(0, 0, 255));
        lblWelcome.setText("Welcome ");

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/search.png"))); // NOI18N

        txtSearch.setText("Search");

        jPanelCommands.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Commands", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAdd.setText(" Add ");

        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/edit.png"))); // NOI18N
        btnEdit.setText(" Edit ");

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/delete.png"))); // NOI18N
        btnDelete.setText(" Delete ");

        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/clear.png"))); // NOI18N
        btnClear.setText(" Clear ");

        javax.swing.GroupLayout jPanelCommandsLayout = new javax.swing.GroupLayout(jPanelCommands);
        jPanelCommands.setLayout(jPanelCommandsLayout);
        jPanelCommandsLayout.setHorizontalGroup(
            jPanelCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCommandsLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanelCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanelCommandsLayout.setVerticalGroup(
            jPanelCommandsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCommandsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanelWelcomeLayout = new javax.swing.GroupLayout(jPanelWelcome);
        jPanelWelcome.setLayout(jPanelWelcomeLayout);
        jPanelWelcomeLayout.setHorizontalGroup(
            jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWelcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelWelcomeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelWelcomeLayout.createSequentialGroup()
                        .addComponent(txtSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
            .addComponent(jPanelCommands, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanelWelcomeLayout.setVerticalGroup(
            jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelWelcomeLayout.createSequentialGroup()
                .addComponent(lblWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCommands, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelStudentInfo.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Student info", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Agency FB", 1, 16), new java.awt.Color(0, 51, 204))); // NOI18N

        lblStudentId.setText("Student id");

        txtStudentId.setText(" ");

        txtFirstName.setText(" ");

        lblFirstName.setText("First name");

        txtLastName.setText(" ");

        lblLastName.setText("Last name");

        txtDepartment.setText(" ");

        lblDepartment.setText("Department");

        lblAge.setText("Age");

        txtAge.setText(" ");

        txtHeight.setText(" ");

        lblHeight.setText("Height");

        lblWeight.setText("Weight");

        lblGender.setText("Gender");

        txtWeight.setText(" ");

        lblBlood.setText("Blood");

        txtBlood.setText(" ");

        comboGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        javax.swing.GroupLayout panelStudentInfoLayout = new javax.swing.GroupLayout(panelStudentInfo);
        panelStudentInfo.setLayout(panelStudentInfoLayout);
        panelStudentInfoLayout.setHorizontalGroup(
            panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStudentInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStudentInfoLayout.createSequentialGroup()
                        .addComponent(lblFirstName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelStudentInfoLayout.createSequentialGroup()
                        .addComponent(lblStudentId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelStudentInfoLayout.createSequentialGroup()
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLastName)
                            .addComponent(lblDepartment))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(txtLastName))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblGender)
                    .addComponent(lblWeight)
                    .addComponent(lblHeight)
                    .addComponent(lblAge)
                    .addComponent(lblBlood))
                .addGap(40, 40, 40)
                .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtBlood)
                    .addComponent(txtAge)
                    .addComponent(txtHeight)
                    .addComponent(txtWeight)
                    .addComponent(comboGender, 0, 91, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        panelStudentInfoLayout.setVerticalGroup(
            panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelStudentInfoLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelStudentInfoLayout.createSequentialGroup()
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeight)
                            .addComponent(txtHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblWeight)
                            .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGender)
                            .addComponent(comboGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBlood)
                            .addComponent(txtBlood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelStudentInfoLayout.createSequentialGroup()
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblStudentId)
                            .addComponent(txtStudentId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFirstName)
                            .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLastName)
                            .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(panelStudentInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDepartment))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelTableStudentShowInfo.setBackground(new java.awt.Color(204, 204, 255));
        panelTableStudentShowInfo.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tblStudentShowInfo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblStudentShowInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblStudentShowInfo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblStudentShowInfo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentShowInfoMouseClicked(evt);
            }
        });
        tblStudentShowInfo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblStudentShowInfoKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblStudentShowInfo);

        javax.swing.GroupLayout panelTableStudentShowInfoLayout = new javax.swing.GroupLayout(panelTableStudentShowInfo);
        panelTableStudentShowInfo.setLayout(panelTableStudentShowInfoLayout);
        panelTableStudentShowInfoLayout.setHorizontalGroup(
            panelTableStudentShowInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableStudentShowInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelTableStudentShowInfoLayout.setVerticalGroup(
            panelTableStudentShowInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTableStudentShowInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        panelPhoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        paneImgPlace.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblImage.setText(" ");

        javax.swing.GroupLayout paneImgPlaceLayout = new javax.swing.GroupLayout(paneImgPlace);
        paneImgPlace.setLayout(paneImgPlaceLayout);
        paneImgPlaceLayout.setHorizontalGroup(
            paneImgPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paneImgPlaceLayout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53))
        );
        paneImgPlaceLayout.setVerticalGroup(
            paneImgPlaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paneImgPlaceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblImage, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnImageUpload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/upload.png"))); // NOI18N
        btnImageUpload.setText("Upload");

        txtImageUpload.setText(" ");

        btnSaveImg.setText(" Save ");

        javax.swing.GroupLayout panelPhotoLayout = new javax.swing.GroupLayout(panelPhoto);
        panelPhoto.setLayout(panelPhotoLayout);
        panelPhotoLayout.setHorizontalGroup(
            panelPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPhotoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPhotoLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(btnSaveImg, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelPhotoLayout.createSequentialGroup()
                        .addComponent(txtImageUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnImageUpload, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPhotoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paneImgPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelPhotoLayout.setVerticalGroup(
            panelPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPhotoLayout.createSequentialGroup()
                .addComponent(paneImgPlace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPhotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnImageUpload)
                    .addComponent(txtImageUpload, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveImg)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        mnuIteamFile.setText(" File ");
        mnuIteamFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuIteamFileActionPerformed(evt);
            }
        });

        mIteamClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Q, java.awt.event.InputEvent.CTRL_MASK));
        mIteamClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/close.png"))); // NOI18N
        mIteamClose.setText("Close ");
        mIteamClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mIteamCloseActionPerformed(evt);
            }
        });
        mnuIteamFile.add(mIteamClose);

        mIteamExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mIteamExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/exit.png"))); // NOI18N
        mIteamExit.setText("Exit");
        mIteamExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mIteamExitActionPerformed(evt);
            }
        });
        mnuIteamFile.add(mIteamExit);

        menuBarMain.add(mnuIteamFile);

        mnuIteamEdit.setText(" Edit ");

        mIteamSnap.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mIteamSnap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/snap.png"))); // NOI18N
        mIteamSnap.setText("Snap");
        mnuIteamEdit.add(mIteamSnap);

        menuBarMain.add(mnuIteamEdit);

        mnuIteamHelp.setText(" Help ");

        mIteamOffHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mIteamOffHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/offlinehelp.png"))); // NOI18N
        mIteamOffHelp.setText("Offline help");
        mIteamOffHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mIteamOffHelpActionPerformed(evt);
            }
        });
        mnuIteamHelp.add(mIteamOffHelp);

        mItemWebHelp.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        mItemWebHelp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/webhelp.png"))); // NOI18N
        mItemWebHelp.setText("WebHelp");
        mItemWebHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemWebHelpActionPerformed(evt);
            }
        });
        mnuIteamHelp.add(mItemWebHelp);

        menuBarMain.add(mnuIteamHelp);

        mnuIteamAbout.setText(" About ");

        mIteamAboutMe.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        mIteamAboutMe.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/about.png"))); // NOI18N
        mIteamAboutMe.setText(" About me");
        mIteamAboutMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mIteamAboutMeActionPerformed(evt);
            }
        });
        mnuIteamAbout.add(mIteamAboutMe);

        menuBarMain.add(mnuIteamAbout);

        mnuIteamDate.setText(" Date ");
        menuBarMain.add(mnuIteamDate);

        mnuLoggedTime.setText(" Time ");
        menuBarMain.add(mnuLoggedTime);

        mnuRealTime.setText(" Time2 ");
        menuBarMain.add(mnuRealTime);

        setJMenuBar(menuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(panelCont, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelWelcome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelStudentInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTableStudentShowInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelPhoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelStudentInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTableStudentShowInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelCont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mIteamCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mIteamCloseActionPerformed

        try {
            close();
            LoginFrm obj = new LoginFrm();
            obj.setVisible(true);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);
        } finally {
            try {
                rs.close();
                pst.close();
                connection.close();
            } catch (Exception e) {
            }

        }
    }//GEN-LAST:event_mIteamCloseActionPerformed

    private void mnuIteamFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuIteamFileActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mnuIteamFileActionPerformed

    private void mIteamExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mIteamExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mIteamExitActionPerformed

    private void btnSingOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSingOutActionPerformed
        mIteamCloseActionPerformed(evt);
    }//GEN-LAST:event_btnSingOutActionPerformed

    private void tblStudentShowInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentShowInfoMouseClicked
        try {
            int row = tblStudentShowInfo.getSelectedRow();
            String tableClick = (tblStudentShowInfo.getModel().getValueAt(row, 0).toString());
            String sql = "Select * from Student_info where Student_id = '" + tableClick + "'";
            pst = connection.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                getValue();
                showSliderData();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_tblStudentShowInfoMouseClicked

    private void tblStudentShowInfoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblStudentShowInfoKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN) {
            try {
                int row = tblStudentShowInfo.getSelectedRow();
                String tableClick = (tblStudentShowInfo.getModel().getValueAt(row, 0).toString());
                String sql = "Select * from Student_info where Student_id = '" + tableClick + "'";
                pst = connection.prepareStatement(sql);
                rs = pst.executeQuery();
                if (rs.next()) {
                    getValue();
                    showSliderData();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }
        }

    }//GEN-LAST:event_tblStudentShowInfoKeyReleased

    private void tblStudentInfoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentInfoMouseClicked
        try {
            int row = tblStudentInfo.getSelectedRow();
            String tableClick = (tblStudentInfo.getModel().getValueAt(row, 0).toString());
            String sql = "Select * from Student_info where Student_id = '" + tableClick + "'";
            pst = connection.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                getValue();
                showSliderData();
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }
    }//GEN-LAST:event_tblStudentInfoMouseClicked

    private void mIteamOffHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mIteamOffHelpActionPerformed
        try {
//          Runtime.getRuntime().exec("notepad "+"files\\help.txt");    //moze i ovako, ali bolje sa Desktop
            Desktop.getDesktop().open(new File("files\\help.txt"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(panelCont, "Error opening file");
        }

    }//GEN-LAST:event_mIteamOffHelpActionPerformed

    private void btnOffHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOffHelpActionPerformed
        mIteamOffHelpActionPerformed(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_btnOffHelpActionPerformed

    private void mItemWebHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemWebHelpActionPerformed
        try {
            Desktop.getDesktop().browse(URI.create("https://github.com/somixyz/AlphaStat/blob/master/README.md"));
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, ex);
            Logger.getLogger(AlphaStatMain.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mItemWebHelpActionPerformed

    private void mIteamAboutMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mIteamAboutMeActionPerformed
        try {
            AboutFrm aboutForm = new AboutFrm();
            aboutForm.setVisible(true);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e);

        }
    }//GEN-LAST:event_mIteamAboutMeActionPerformed

    private void rbtnHealthStatus1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnHealthStatus1ActionPerformed
        status = "Good. No need action. ";
    }//GEN-LAST:event_rbtnHealthStatus1ActionPerformed

    private void rbtnHealthStatus2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtnHealthStatus2ActionPerformed
        status = "Not Good. Need to be careful! ";
    }//GEN-LAST:event_rbtnHealthStatus2ActionPerformed

     
    private void buttonReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReportActionPerformed
        
        //writing document
        try {
            Document document = new Document() ;
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("Report.pdf"));
            document.open();

            //barcode generator
            PdfContentByte CB = writer.getDirectContent();
            BarcodeEAN codeEAN = new BarcodeEAN();
            codeEAN.setCode("1234567891011");
            Paragraph para = new Paragraph();
            document.add(new Paragraph("Barcode UDCA"));
            codeEAN.setCodeType(Barcode.UPCA);
            codeEAN.setCode("1110987654321");
            document.add(codeEAN.createImageWithBarcode(CB, BaseColor.BLACK, BaseColor.BLACK));
            document.add(para);

            //add image
            com.itextpdf.text.Image image = com.itextpdf.text.Image.getInstance("Files\\star.jpg");
            document.add(image);

            document.add(new Paragraph("Student Report", FontFactory.getFont(
                FontFactory.TIMES_BOLD, 18, Font.BOLD, BaseColor.RED)));
            //add date
            document.add(new Paragraph(new Date().toString()));

            document.add(new Paragraph("***************************"
                + "******************************************"
                + "*******************************************"));

            //add table
            document.add(new Paragraph(" "));
            document.add(new Chunk("Data Table : ", FontFactory.getFont(
                FontFactory.TIMES_BOLD, 16, Font.UNDERLINE, BaseColor.BLUE)));
            PdfPTable table = new PdfPTable(2);

            PdfPCell cell = new PdfPCell(new Paragraph("Report"));
            cell.setColspan(8);
            cell.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell.setBackgroundColor(BaseColor.GREEN);
            cell.setPadding(10.0f);
            table.addCell(cell);
            
        //add cell info            
            table.addCell("Student Id");
            table.addCell(txtStudentId.getText());
            table.addCell("First Name");
            table.addCell(txtFirstName.getText());
            table.addCell("Last Name");
            table.addCell(txtLastName.getText());
            table.addCell("Department");
            table.addCell(txtDepartment.getText());
            table.addCell("Age");
            table.addCell(txtAge.getText());
            table.addCell("Height");
            table.addCell(txtHeight.getText());
            table.addCell("Weight");
            table.addCell(txtWeight.getText());
            table.addCell("Gender");
            table.addCell((String) comboGender.getSelectedItem());
            table.addCell("Blood Group");
            table.addCell(txtBlood.getText());
            document.add(table);

            // add student status  
            document.add(new Paragraph(" "));
            document.add(new Chunk("Health Status : ", FontFactory.getFont(
                FontFactory.TIMES_BOLD, 16, Font.NORMAL, BaseColor.BLUE)));
            document.add(new Chunk(status));
            // add comment  
            document.add(new Paragraph(" "));
            document.add(new Chunk("Comment :", FontFactory.getFont(
                    FontFactory.TIMES_BOLD, 16, Font.UNDERLINE, BaseColor.BLUE)));
            document.add(new Chunk(tAreaComment.getText()));
            
            //add chart    
            //-   not yet implemented   -
//            if (("checked".equals(decision))) {
//                document.add(new Paragraph(" "));
//                document.add(new Paragraph("Chart :", FontFactory.getFont(
//                    FontFactory.TIMES_BOLD, 16, Font.UNDERLINE, BaseColor.BLUE)));
//                    com.itextpdf.text.Image imgChart = com.itextpdf.text.Image.getInstance("Chart.png");
//                    //imgChart.setRotation(45.0f);
//                    imgChart.scaleAbsolute(520, 300);
//                    document.add(imgChart);
//            } 
            document.add(new Paragraph(" "));

            document.close(); 
            JOptionPane.showMessageDialog(rootPane, "Report is saved.");
            } catch (DocumentException | IOException | HeadlessException e) {
                JOptionPane.showMessageDialog(rootPane, e);
            }
    }//GEN-LAST:event_buttonReportActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        decision = "checked";
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        decision = "Not ckecked";
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlphaStatMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlphaStatMain().setVisible(true);

            }
        });
    }
    private void init() {
        setLocationRelativeTo(this);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setResizable(false);

        //settings title date and time
        mnuIteamDate.setText(CurrentDateAndTime.getCurrentDate());
        mnuIteamDate.setForeground(Color.blue);
        mnuLoggedTime.setText(CurrentDateAndTime.getLoggedTime());
        mnuLoggedTime.setForeground(Color.red);

    }

    public void close() {
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    private void updateStudentInfoTable() {
        try {
            String sql = "select * from Student_info";
            pst = connection.prepareStatement(sql);
            rs = pst.executeQuery();
            tblStudentInfo.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }

    }

    private void updateStudentShowInfo() {
        try {
            String sql = "select Student_id, First_name from Student_info";
            pst = connection.prepareStatement(sql);
            rs = pst.executeQuery();
            tblStudentShowInfo.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        } 
    }
    private void updateDoc() {
        try {
            String sql = "select * from Doc_table";
            pst = connection.prepareStatement(sql);
            rs = pst.executeQuery();
            tblDoc.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex);
        }

    }

    protected void getValue() {
        try {
            txtStudentId.setText(rs.getString("Student_id"));
            txtFirstName.setText(rs.getString("First_name"));
            txtLastName.setText(rs.getString("Last_name"));
            txtDepartment.setText(rs.getString("Department"));
            txtAge.setText(rs.getString("Age"));
            txtHeight.setText(rs.getString("Height"));
            txtWeight.setText(rs.getString("Weight"));
            txtBlood.setText(rs.getString("Blood"));
            comboGender.setSelectedItem(rs.getString("Gender"));

            // byte format of image
            byte[] imageData = rs.getBytes("Photo");
            if(imageData !=null){
                ImageIcon format = new ImageIcon(scaledImage(imageData, lblImage.getWidth(), lblImage.getHeight()));
                lblImage.setIcon(format);
            } else { 
                lblImage.setIcon(null); 
                throw new NullPointerException();}    
        } catch (SQLException | NullPointerException ex) { 
            if (ex.getClass().getName().equals("SQLException")){
                JOptionPane.showMessageDialog(rootPane, ex);}
            else{JOptionPane.showMessageDialog(rootPane, "You dont have image");}
        } 
    }

    private Image scaledImage(byte[] img, int w, int h) {
        BufferedImage resizedImage = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        try {
            Graphics2D g2 = resizedImage.createGraphics();
            g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BILINEAR);

            //convert byte array back to buffered image
            ByteArrayInputStream in = new ByteArrayInputStream(img);
            BufferedImage bImageFromConvert = ImageIO.read(in);

            g2.drawImage(bImageFromConvert, 0, 0, w, h, null);
            g2.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(panelCont, ex);
        }
        return resizedImage;
    }

    protected void setClearValue() {
        txtStudentId.setText(null);
        txtFirstName.setText(null);
        txtLastName.setText(null);
        txtDepartment.setText(null);
        txtAge.setText(null);
        txtHeight.setText(null);
        txtWeight.setText(null);
        txtBlood.setText(null);
        comboGender.setSelectedItem("Male"); 
        lblImage.setIcon(null); 
    }

//    private void setSearchListener(){
//        SearchEvent seartchEvent = new SearchEvent(txtSearch);
//        txtSearch.addKeyListener(seartchEvent);
//        txtSearch.addFocusListener(seartchEvent);
//    }
    private void setListeners() {
       

        txtSearch.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                txtSearch.setText("");
            }

            @Override
            public void focusLost(FocusEvent e) {
                txtSearch.setText("Search by id...");
            }
        });
        txtSearch.addKeyListener(new KeyListener() {
            @Override
            public void keyTyped(KeyEvent e) {
            }

            @Override
            public void keyPressed(KeyEvent e) {
            }

            @Override
            public void keyReleased(KeyEvent e) {
            
                String sql = "select * from Student_info where Student_id=?";
                try {
                    pst = connection.prepareStatement(sql);
                    pst.setString(1, txtSearch.getText());
                    rs = pst.executeQuery();
                    if (rs.next()) {
                        getValue();
                    } else {
                        setClearValue();
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);
                }
            }
        });
        
        btnAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String sql = "insert into Student_info (Student_id,First_name,Last_name,Department,Age,Height,Weight,Gender,Blood)"
                        + "values(?,?,?,?,?,?,?,?,?)";
                try {
                    pst = connection.prepareStatement(sql);
                    pst.setString(1, txtStudentId.getText());
                    pst.setString(2, txtFirstName.getText());
                    pst.setString(3, txtLastName.getText());
                    pst.setString(4, txtDepartment.getText());
                    pst.setString(5, txtAge.getText());
                    pst.setString(6, txtHeight.getText());
                    pst.setString(7, txtWeight.getText());
                    pst.setString(8, comboGender.getSelectedItem().toString());
                    pst.setString(9, txtBlood.getText());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Saved");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error, some data are not entered");
                }
                updateStudentInfoTable();
                updateStudentShowInfo();
            }
        });
        btnEdit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String sql = "update Student_info set First_name=?,Last_name=?,Department=?,Age=?,Height=?,Weight=?,Gender=?,Blood=?"
                        + " where Student_id=?";
                try {
                    pst = connection.prepareStatement(sql);
                    pst.setString(1, txtFirstName.getText());
                    pst.setString(2, txtLastName.getText());
                    pst.setString(3, txtDepartment.getText());
                    pst.setString(4, txtAge.getText());
                    pst.setString(5, txtHeight.getText());
                    pst.setString(6, txtWeight.getText());
                    pst.setString(7, comboGender.getSelectedItem().toString());
                    pst.setString(8, txtBlood.getText());
                    pst.setString(9, txtStudentId.getText());
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Updated");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Error, some data are not entered");

                }
                updateStudentInfoTable();
                updateStudentShowInfo();
            }
        });
        btnClear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                setClearValue();
            }
        });
        btnDelete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int p = JOptionPane.showConfirmDialog(rootPane, "Do you want to delete ?", "Delete", JOptionPane.YES_NO_OPTION);
                if (p == 0) {
                    String sql = "delete from Student_info where Student_id=?";
                    try {
                        pst = connection.prepareStatement(sql);
                        pst.setString(1, txtStudentId.getText());
                        pst.execute();
                        JOptionPane.showMessageDialog(rootPane, "Deleted");
                    } catch (SQLException ex) {
                        Logger.getLogger(AlphaStatMain.class.getName()).log(Level.SEVERE, null, ex);
                        JOptionPane.showMessageDialog(rootPane, ex);
                    }
                    updateStudentInfoTable();
                    updateStudentShowInfo();
                }
            }
        });
        mIteamSnap.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    Snap.saveScreenShot(panelStudentInfo, "Student-info img.png");
                    JOptionPane.showMessageDialog(rootPane, "Image is captured");
                } catch (Exception ex) {
                    Logger.getLogger(AlphaStatMain.class.getName()).log(Level.SEVERE, null, ex);
                    JOptionPane.showMessageDialog(rootPane, ex);
                }

            }
        });

        btnImageUpload.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {                
            JFileChooser chooser = new JFileChooser();
            chooser.showOpenDialog(null);

            File fileChoosen = chooser.getSelectedFile();
            String fileName = fileChoosen.getAbsolutePath();
            txtImageUpload.setText(fileName); 
            try {
                File fImg = new File(fileName);
                FileInputStream fIS = new FileInputStream(fImg);
                ByteArrayOutputStream bAOS = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                for (int readNum; (readNum = fIS.read(buf)) != -1;) {
                    bAOS.write(buf, 0, readNum);
                }
                personImg = bAOS.toByteArray();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, ex); 
            }
        }});
        btnSaveImg.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               String value1 = txtStudentId.getText();
               String sql = "update Student_info set Photo=? where Student_id='" + value1 + "'  ";
            try { 
                pst = connection.prepareStatement(sql);
                pst.setBytes(1, personImg);
                pst.execute();
                JOptionPane.showMessageDialog(rootPane, "Image saved");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, ex);
            }
            }
        });
    
        btnSendMail.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {    
                final String from = txtFrom.getText();
                final String password = txtPassword.getText();
                
                String to = txtTo.getText();
                String subject = txtSubject.getText();
                String txtMessage = txtAreaMessage.getText();
                
                Properties pros = new Properties();
                pros.put("mail.smtp.host", "smtp.gmail.com");
                pros.put("mail.smtp.socketFactory.port", "465"); //SSL protocol, port no is 465
                pros.put("mail.smtp.socketFactory.class", "javax.net.ssl.SSLSocketFactory");
                pros.put("mail.smtp.auth", "true");
                pros.put("mail.smtp.port", "465");
                
                Session session = Session.getDefaultInstance(pros,
                        new javax.mail.Authenticator() {
                            @Override
                            protected PasswordAuthentication getPasswordAuthentication(){
                                return new PasswordAuthentication(from, password);
                            }
                        }); 
                try{
                        //message header  
                        //information about sender, reciver and subject
                    Message message = new MimeMessage(session);
                    message.setFrom(new InternetAddress(from));
                    message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
                    message.setSubject(subject);

                        //set the text message 
                        // contain of text message
                    MimeBodyPart messageBodyPart = new MimeBodyPart();
                    messageBodyPart.setText(txtMessage);
                    Multipart multiPart = new MimeMultipart();
                    multiPart.addBodyPart(messageBodyPart); 

                    //attach file
                    if( filePath!=null && !filePath.isEmpty() ){
                        messageBodyPart = new MimeBodyPart();  
                        DataSource source = new FileDataSource(filePath);  
                        messageBodyPart.setDataHandler(new DataHandler(source));
                        messageBodyPart.setFileName(txtAttachName.getText());
                        multiPart.addBodyPart(messageBodyPart);
                    }
                        //sending...
                    message.setContent(multiPart);
                    Transport.send(message);
                    
                    JOptionPane.showMessageDialog(rootPane, "Message sent");
                   
                }catch(Exception ex){ 
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Sending message failed", "Message dialog", JOptionPane.ERROR_MESSAGE);

                }
            }
        });
        
        
        btnAttach.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JFileChooser chooser = new JFileChooser();
                chooser.showOpenDialog(rootPane);
                
                File f = chooser.getSelectedFile();
                filePath = f.getAbsolutePath();
                txtAttachFile.setText(filePath);
                txtAttachName.setText(f.getName());
            }
        });
    
        btnDocAttach.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) { 
                JFileChooser chooser = new JFileChooser();
                chooser.showOpenDialog(rootPane);
                
                File f = chooser.getSelectedFile();
                String fileDocPath = f.getAbsolutePath();
                txtDocAttach.setText(fileDocPath);
            }
        });
        btnDocAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                 String sql = "insert into Doc_table (Doc_id,Student_id,Doc_name,Path)"
                        + "values(?,?,?,?)";
                try {
                    pst = connection.prepareStatement(sql);
                    pst.setString(1, txtDocID.getText());
                    pst.setString(2, txtDocSId.getText());
                    pst.setString(3, txtDocName.getText());
                    pst.setString(4, txtDocAttach.getText()); 
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Saved");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);
                }
                updateDoc();
            }
        });
            
        tblDoc.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                try {
                    int row = tblDoc.getSelectedRow();
                    String tableClick = (tblDoc.getModel().getValueAt(row, 3).toString());
                    String sql = "Select * from Doc_table where Doc_id = '" + tableClick + "'";
                    pst = connection.prepareStatement(sql);
                    rs = pst.executeQuery();
                    if (rs.next()) {
                        txtDocID.setText(rs.getString("Doc_id"));
                        txtDocSId.setText(rs.getString("Student_id"));
                        txtDocName.setText(rs.getString("Doc_name"));
                        txtDocAttach.setText(rs.getString("Path"));
                    
//                        try {
//                        Desktop.getDesktop().open(new File( (String) tblDoc.getValueAt(row, 3)));
//                        } catch (IOException ex) {
//                            Logger.getLogger(AlphaStatMain.class.getName()).log(Level.SEVERE, null, ex);
//                        } 
                    }
                }catch (SQLException ex) {
                    JOptionPane.showMessageDialog(rootPane, ex);
                }
                
                int row = tblDoc.getSelectedRow();
                String value = (tblDoc.getModel().getValueAt(row, 3).toString());
                try {
                    Runtime.getRuntime().exec("rundll32 url.dll,FileProtocolHandler " + value);
                } catch (Exception en) {
                    en.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, "Error");
                }
            }
        });
        
        btnDocDelete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
//                int p = JOptionPane.showConfirmDialog(panelCont, "Do you want to delete ?", "Delete", JOptionPane.YES_NO_OPTION);
//                if (p == 0) {
                    String sql = "delete from Doc_table where Doc_id=?";
                    try {
                        pst = connection.prepareStatement(sql);
                        pst.setString(1, txtDocID.getText());
                        pst.execute();
                        JOptionPane.showMessageDialog(rootPane, "Deleted");
                        updateDoc();
                    } catch (SQLException | HeadlessException ex) {
                        JOptionPane.showMessageDialog(rootPane, ex);
                    }
//                    updateDoc();
//                }
            }
        });
    
        btnDocClear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                txtDocAttach.setText(null);
                txtDocID.setText(null);
                txtDocName.setText(null);
                txtDocSId.setText(null); 
            }
        });
    }
    
    private final void currentTime(){
    
        // dynamic date and time
         Thread threadClock = new Thread() {
         @Override
         public void run() {
            for (;;) {
               Calendar cal = new GregorianCalendar();

               int second = cal.get(Calendar.SECOND);
               int minute = cal.get(Calendar.MINUTE);
               int hour = cal.get(Calendar.HOUR);
               mnuRealTime.setText("Current Time: " + hour + " h : " + minute + " min : " + second +" sec");
               mnuRealTime.setForeground(Color.GREEN);
               try {
               sleep(1000);
               } catch (InterruptedException ex) {
                System.out.println(ex.getMessage());
               }
            }
        }
        };
        threadClock.start();  
    }
     private void showSliderData() {
        sliderAge.setValue((int) Float.parseFloat(txtAge.getText()));
        sliderHeight.setValue((int) Float.parseFloat(txtHeight.getText()));
        sliderWeight.setValue((int) Float.parseFloat(txtWeight.getText()));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnAttach;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDocAdd;
    private javax.swing.JButton btnDocAttach;
    private javax.swing.JButton btnDocClear;
    private javax.swing.JButton btnDocDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnImageUpload;
    private javax.swing.JButton btnOffHelp;
    private javax.swing.JButton btnSaveImg;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSendMail;
    private javax.swing.JButton btnSingOut;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton buttonReport;
    private javax.swing.JComboBox<String> comboGender;
    private javax.swing.JPanel documentPanel;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanelCommands;
    private javax.swing.JPanel jPanelWelcome;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPaneComment;
    private javax.swing.JScrollPane jScrollPaneStudentInfo;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAttachment;
    private javax.swing.JLabel lblBlood;
    private javax.swing.JLabel lblComment;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblFrom;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblHealthStatus;
    private javax.swing.JLabel lblHeight;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblIndicatorAge;
    private javax.swing.JLabel lblIndicatorHeight;
    private javax.swing.JLabel lblIndicatorWeight;
    private javax.swing.JLabel lblLastName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblStudentId;
    private javax.swing.JLabel lblSubject;
    private javax.swing.JLabel lblTo;
    private javax.swing.JLabel lblWeight;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JMenuItem mIteamAboutMe;
    private javax.swing.JMenuItem mIteamClose;
    private javax.swing.JMenuItem mIteamExit;
    private javax.swing.JMenuItem mIteamOffHelp;
    private javax.swing.JMenuItem mIteamSnap;
    private javax.swing.JMenuItem mItemWebHelp;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBarMain;
    private javax.swing.JMenu mnuIteamAbout;
    private javax.swing.JMenu mnuIteamDate;
    private javax.swing.JMenu mnuIteamEdit;
    private javax.swing.JMenu mnuIteamFile;
    private javax.swing.JMenu mnuIteamHelp;
    private javax.swing.JMenu mnuLoggedTime;
    private javax.swing.JMenu mnuRealTime;
    private javax.swing.JPanel paneImgPlace;
    private javax.swing.JPanel panelCont;
    private javax.swing.JPanel panelDataTable;
    private javax.swing.JPanel panelDocument;
    private javax.swing.JPanel panelEmail;
    private javax.swing.JPanel panelIndicator;
    private javax.swing.JPanel panelPhoto;
    private javax.swing.JPanel panelReport;
    private javax.swing.JPanel panelStatistics;
    private javax.swing.JPanel panelStudentInfo;
    private javax.swing.JPanel panelTableStudentShowInfo;
    private javax.swing.JRadioButton rbtnHealthStatus1;
    private javax.swing.JRadioButton rbtnHealthStatus2;
    private javax.swing.JSlider sliderAge;
    private javax.swing.JSlider sliderHeight;
    private javax.swing.JSlider sliderWeight;
    private javax.swing.JTextArea tAreaComment;
    private javax.swing.JTable tblDoc;
    private javax.swing.JTable tblStudentInfo;
    private javax.swing.JTable tblStudentShowInfo;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextArea txtAreaMessage;
    private javax.swing.JTextField txtAttachFile;
    private javax.swing.JTextField txtAttachName;
    private javax.swing.JTextField txtBlood;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtDocAttach;
    private javax.swing.JTextField txtDocID;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtDocSId;
    private javax.swing.JTextField txtFirstName;
    private javax.swing.JTextField txtFrom;
    private javax.swing.JTextField txtHeight;
    private javax.swing.JTextField txtImageUpload;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtStudentId;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtTo;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
    
    
    private byte[] personImg = null;
    private  String filePath = null;
    
     //variable declaration for report
    private String status;
    private String decision;
    
}
